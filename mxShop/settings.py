"""
Django settings for mxShop project.

Generated by 'django-admin startproject' using Django 2.2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
import sys

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
sys.path.insert(0, os.path.join(BASE_DIR, "apps"))
sys.path.insert(1, os.path.join(BASE_DIR, "extra_apps"))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'e6r*9-s8=zup(%g8v-5@o^*q&t*tjugv=y4(c)kbu^=9lrgrgw'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Third apps
    "corsheaders",
    "crispy_forms",
    "rest_framework",
    "rest_framework.authtoken",
    "django_filters",
    "social_django",

    # custom apps
    "apps.users.apps.UsersConfig",
    "apps.goods.apps.GoodsConfig",
    "apps.trade.apps.TradeConfig",
    "apps.user_operation.apps.UserOperationConfig",
    "apps.utils.apps.UtilsConfig",

    # extra_apps
    "extra_apps.xadmin.apps.XAdminConfig",
    "extra_apps.DjangoUeditor"
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# CORS 跨域设置
CORS_ORIGIN_ALLOW_ALL = True

ROOT_URLCONF = 'mxShop.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect',
            ],
        },
    },
]

WSGI_APPLICATION = 'mxShop.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

# 数据库连接配置
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': "mxshop",
        "USER": "mxshop",
        "PASSWORD": "Mxshop5.7",
        "HOST": "127.0.0.1",
        "PORT": "3306",
    }
}

# memcached缓存设置
CACHE = {
    "default": {
        "BACKEND": "django.core.cache.backends.memcached.MemcachedCache",
        "LOCATION": "127.0.0.1:11211"
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# 替换系统用户
AUTH_USER_MODEL = "users.UserProfile"

# 自定义用户认证
AUTHENTICATION_BACKENDS = (
    "social_core.backends.qq.QQOAuth2",
    "social_core.backends.weibo.WeiboOAuth2",
    "social_core.backends.weixin.WeixinOAuth2",
    "utils.help.AuthenticationBackend",
    'django.contrib.auth.backends.ModelBackend',
)

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'zh-Hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static")
]

MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, "media")

# rest framework 相关配置
REST_FRAMEWORK = {
    "DEFAULT_FILTER_BACKENDS": ['django_filters.rest_framework.DjangoFilterBackend'],
    "DEFAULT_SCHEMA_CLASS": "rest_framework.schemas.coreapi.AutoSchema"
}
# from rest_framework import settings

# 手机号码正则表达式
REGEX_MOBILE = r"^1[34579]\d{9}"

# JWT 相关配置
from datetime import timedelta

JWT_AUTH = {
    "JWT_EXPIRATION_DELTA": timedelta(days=7),
    'JWT_AUTH_HEADER_PREFIX': 'JWT',
}

PRIVATE_KEY_PATH = os.path.join(BASE_DIR, "apps/trade/keys/privateKey.txt")
ALIPAY_KEY_PATH = os.path.join(BASE_DIR, "apps/trade/keys/alipay_key.txt")
